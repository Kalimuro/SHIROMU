from datetime import datetime
import requests
import json
from bs4 import BeautifulSoup


def get_discord_user_info(username):
    trans = {
        "type": "–¢–∏–ø",
        "user_id": "–î—Å ID",
        "actual_name": "Main Nickname",
        "actual_avatar": "–ê–≤–∞",
        "display_name": "–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è",
        "time_in_voice": "–í—Ä–µ–º—è –≤ –≥—Å (—Å–µ–∫)",
        "last_date_in_voice": "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–∞—Ç–∞/–≤—Ä–µ–º—è –≤ –≥—Å",
        "gender": "–ü–æ–ª",
        "total_messages": "–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞–π–¥–µ–Ω–æ",
        "voice_info": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Å",
        "status": "–°—Ç–∞—Ç—É—Å",
        "guild_id": "ID —Å–µ—Ä–≤–µ—Ä–∞",
        "channel_id": "ID –≤–æ–π—Å–∞",
        "channel_name": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",
        "category_id": "ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
        "category_name": "–ö–∞—Ç–µ–≥–æ—Ä–∏—è",
        "server_name": "–ù–∞–∑–≤–∞–Ω–∏–µ –¥—Å —Å–µ—Ä–≤–µ—Ä–∞",
        "server_avatar": "–ê–≤–∞ —Å–µ—Ä–≤–µ—Ä–∞",
        "last_voice_time": "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤ –≥—Å",
        "self_stream": "–î–µ–º–∫–∞",
        "self_video": "–í–∏–¥–µ–æ-—Ñ–≤–∞–π–ª—ã",
        "role_guilds": "–°–µ—Ä–≤–µ—Ä–∞ –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ä–æ–ª–∏",
        "owner_guilds": "–°–µ—Ä–≤–µ—Ä–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –æ–≤–Ω–µ—Ä–∫–∞"
    }

    def format_value(key, value):
        if key == "time_in_voice" and isinstance(value, int):
            hours = value // 3600
            minutes = (value % 3600) // 60
            seconds = value % 60
            return f"{hours}—á {minutes}–º {seconds}—Å ({value} —Å–µ–∫)"

        elif key in ["last_date_in_voice", "last_voice_time"] and value:
            return value.replace("T", " ").replace(".421Z", "").replace("Z", "")

        elif value is None:
            return "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"

        elif value is False:
            return "–ù–µ—Ç"

        elif value is True:
            return "–î–∞"

        elif isinstance(value, list) and len(value) == 0:
            return "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"

        return value

    def print_pretty_russian(data, indent=0, parent_key=""):
        result = []
        for key, value in data.items():
            russian_key = trans.get(key, key)

            if isinstance(value, dict):
                result.append(" " * indent + f"üéØ {russian_key}:")
                result.extend(print_pretty_russian(value, indent + 2, key))
            else:
                formatted_value = format_value(key, value)
                result.append(" " * indent + f"‚Ä¢ {russian_key}: {formatted_value}")
        return result

    url = f"https://discord-sensor.com/api/tracker/get-user-info?content={username}"
    response = requests.get(url)

    if response.status_code != 200:
        return f"–û—à–∏–±–∫–∞, –ø–∏—à–∏—Ç–µ sh1ro)"

    try:
        data = response.json()
    except json.JSONDecodeError:
        return "–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"

    result_lines = []
    result_lines.append("=" * 60)
    result_lines.append("üë§ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –¢–ê–†–ì–ï–¢–ï")
    result_lines.append("=" * 60)

    main_info = {k: v for k, v in data.items() if
                 k not in ['voice_info', 'customization', 'role_guilds', 'owner_guilds']}
    result_lines.extend(print_pretty_russian(main_info))

    if 'voice_info' in data and data['voice_info']:
        result_lines.append("\nüé§–ò–ù–§–û–†–ú–ê–¶–ò–Ø –ü–û –í–û–ô–°–ê–ú:")
        result_lines.append("-" * 40)
        result_lines.extend(print_pretty_russian(data['voice_info'], 2))

    if 'role_guilds' in data and data['role_guilds']:
        result_lines.append(f"\n‚Ä¢ –°–µ—Ä–≤–µ—Ä–∞ —Å —Ä–æ–ª—è–º–∏: {len(data['role_guilds'])}")
    if 'owner_guilds' in data and data['owner_guilds']:
        result_lines.append(f"‚Ä¢ –°–µ—Ä–≤–µ—Ä–∞-–≤–ª–∞–¥–µ–ª—å—Ü—ã: {len(data['owner_guilds'])}")

    result_lines.append("=" * 60)

    result_lines.append("\n–ü–†–ò–ú–ï–ß–ê–ù–ò–ï: –ü—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ discord-id –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
    result_lines.append("=" * 60)

    return "\n".join(result_lines)


def get_info_by_dsid(ds_id):
    url = f"https://discord-sensor.com/api/tracker/get-mutual-guilds/{ds_id}"

    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
    }

    try:
        response = requests.get(url, headers=headers, timeout=10)

        data = response.json()

        print("=" * 80)
        print("üéØ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –í–°–ï–• –°–ï–†–í–ï–†–ê–• –¢–ê–†–ì–ï–¢–ê")
        print("=" * 80)
        print(f"üë§ Discord ID: {ds_id}")
        print(f"üìä –í—Å–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {data['item_count']}")
        print("=" * 80)

        sorted_servers = sorted(data['guild_list'], key=lambda x: (not x['left'], x['name']))

        current_servers = []
        left_servers = []

        for i, server in enumerate(sorted_servers, 1):
            status = "‚úÖ –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ" if not server['left'] else "‚ùå –õ–∏–≤–Ω—É–ª"
            status_emoji = "‚úÖ" if not server['left'] else "‚ùå"

            print(f"\n{status_emoji} –°–ï–†–í–ï–† #{i}")
            print(f"   üè∑Ô∏è  –ù–∞–∑–≤–∞–Ω–∏–µ: {server['name']}")
            print(f"   üî¢ ID —Å–µ—Ä–≤–µ—Ä–∞: {server['id']}")
            print(f"   üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {server['member_count']:,}")
            print(f"   üé§ –í –≥–æ–ª–æ—Å–æ–≤—ã—Ö: {server['voice_member_count']}")
            print(f"   üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {server['messages']}")

            if server['voice_seconds'] > 0:
                hours = server['voice_seconds'] // 3600
                minutes = (server['voice_seconds'] % 3600) // 60
                seconds = server['voice_seconds'] % 60
                voice_time = f"{hours}—á {minutes}–º {seconds}—Å"
            else:
                voice_time = "0 —Å–µ–∫"

            print(f"   ‚è∞ –í—Ä–µ–º—è –≤ –≤–æ–π—Å–µ: {voice_time}")
            print(f"   üìç –°—Ç–∞—Ç—É—Å: {status}")
            print("-" * 40)

            if server['left']:
                left_servers.append(server)
            else:
                current_servers.append(server)

        print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   ‚úÖ –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ: {len(current_servers)}")
        print(f"   ‚ùå –õ–∏–≤–Ω—É–ª: {len(left_servers)}")
        print("=" * 80)

        return {
            'discord_id': ds_id,
            'total_servers': data['item_count'],
            'current_servers': current_servers,
            'left_servers': left_servers,
            'all_servers': data['guild_list'],
            'raw_data': data
        }

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞, –ø–∏—à–∏—Ç–µ sh1ro", e)
        return None
    except Exception as e:
        print(f"‚ùå–û—à–∏–±–∫–∞, –ø–∏—à–∏—Ç–µ sh1ro", e)
        return None


def get_nicks_by_id(ds_id):
    url = f"https://discord-sensor.com/api/tracker/get-nicknames/{ds_id}?page=0"

    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
    }

    try:
        response = requests.get(url, headers=headers, timeout=10)

        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞, –ø–∏—à–∏—Ç–µ sh1ro")
            return None

        data = response.json()

        if not data.get('success', False):
            print("‚ùå –û—à–∏–±–∫–∞, –ø–∏—â–∏—Ç–µ sh1ro")
            return None

        print("=" * 80)
        print("üéØ TARGET DISCORD NACKNAMES")
        print("=" * 80)
        print(f"üë§ Discord ID —Ç–∞—Ä–≥–µ—Ç–∞: {data['userId']}")
        print(f"üìä –í—Å–µ–≥–æ –Ω–∏–∫–Ω–µ–π–º–æ–≤: {data['total_count']}")

        if data['hasNextPage']:
            print("‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω—ã –µ—â–µ –Ω–∏–∫–Ω–µ–π–º—ã...")
        print("=" * 80)

        for i, nickname in enumerate(data['nicknames'], 1):
            print(f"\nüè∑Ô∏è  –ù–ò–ö–ù–ï–ô–ú #{i}")
            print(f"   üìõ –ù–∏–∫–Ω–µ–π–º: {nickname['nickname']}")
            print(f"   üÜî: {nickname['id']}")

            if nickname.get('guild'):
                guild = nickname['guild']
                print(f"   üè∞ –°–µ—Ä–≤–µ—Ä: {guild['name']}")
                print(f"   üî¢ ID —Å–µ—Ä–≤–µ—Ä–∞: {guild['id']}")
                if guild.get('vanity_url'):
                    print(f"   üîó Vanity URL: {guild['vanity_url']}")
            else:
                print(f"   üè∞ –°–µ—Ä–≤–µ—Ä: No")

            if nickname.get('time'):
                try:
                    ru_months = {
                        '—è–Ω–≤–∞—Ä—è': '01', '—Ñ–µ–≤—Ä–∞–ª—è': '02', '–º–∞—Ä—Ç–∞': '03',
                        '–∞–ø—Ä–µ–ª—è': '04', '–º–∞—è': '05', '–∏—é–Ω—è': '06',
                        '–∏—é–ª—è': '07', '–∞–≤–≥—É—Å—Ç–∞': '08', '—Å–µ–Ω—Ç—è–±—Ä—è': '09',
                        '–æ–∫—Ç—è–±—Ä—è': '10', '–Ω–æ—è–±—Ä—è': '11', '–¥–µ–∫–∞–±—Ä—è': '12'
                    }

                    time_str = nickname['time']
                    for ru_month, num_month in ru_months.items():
                        time_str = time_str.replace(ru_month, num_month)

                    dt = datetime.strptime(time_str, '%d %m %Y %H:%M:%S')
                    formatted_time = dt.strftime('%d.%m.%Y %H:%M:%S')
                    print(f"   ‚è∞ –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {formatted_time}")
                except:
                    print(f"   ‚è∞ –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {nickname['time']}")
            else:
                print(f"   ‚è∞ –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è: –ù–µ –Ω–∞–π–¥–µ–Ω–æ")

            status = "üëÅÔ∏è  –í–∏–¥–∏–º—ã–π" if not nickname.get('is_hidden', False) else "üëª –°–∫—Ä—ã—Ç—ã–π"
            print(f"   üìç –°—Ç–∞—Ç—É—Å: {status}")
            print("-" * 40)

        print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   üìõ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ: {data['total_count']}")
        print(
            f"   üè∞ –ù–∞–π–¥–µ–Ω–æ –°–µ—Ä–≤–µ—Ä–æ–≤: {len(set(nick['guild']['id'] for nick in data['nicknames'] if nick.get('guild')))}")
        print("=" * 80)

        return {
            'discord_id': data['userId'],
            'total_count': data['total_count'],
            'page': data['page'],
            'has_next_page': data['hasNextPage'],
            'nicknames': data['nicknames'],
            'raw_data': data
        }

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞")
        return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞")
        return None


def get_all_nicknames(ds_id):
    all_nicknames = []
    page = 0

    while True:
        url = f"https://discord-sensor.com/api/tracker/get-nicknames/{ds_id}?page={page}"
        response = requests.get(url)

        if response.status_code != 200:
            break

        data = response.json()

        if not data.get('success', False):
            break

        all_nicknames.extend(data['nicknames'])

        if not data['hasNextPage']:
            break

        page += 1

    return all_nicknames


def get_friends_by_id(user_id='1117374856011464704'):
    url = f"https://discord-sensor.com/api/tracker/get-friends/{user_id}?page=0"
    response = requests.get(url)
    data = response.json()

    if data['success']:
        display_friends(data)
    else:
        print("‚ùå –û—à–∏–±–∫–∞... –°–Ω–æ–≤–∞... –ü–∏—à–∏—Ç–µ sh1ro, –∞ –ª—É—á—à–µ –≤ —á–∞—Ç the flying dutchman")


def display_friends(data):
    friends_info = data['friends']

    print("üéÆ" + "=" * 50 + "üéÆ")
    print(f"üë• –î–†–£–ó–¨–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø üë•")
    print("üéÆ" + "=" * 50 + "üéÆ")
    print(f"üìä –í—Å–µ–≥–æ –¥—Ä—É–∑–µ–π: {friends_info['totalFriends']} üë§")
    print(f"üìë –°—Ç—Ä–∞–Ω–∏—Ü–∞: {friends_info['page'] + 1}/{friends_info['totalPages']} üìÑ")
    print("-" * 55)

    for i, friend in enumerate(friends_info['records'], 1):
        print(f"\n{f'{i}. üë§ –î–†–£–ì #{i}':-^55}")
        print(f"   üÜî ID: {friend['friendId']}")
        print(f"   üìõ –ò–º—è: {friend['username']}")
        print(f"   üñºÔ∏è –ê–≤–∞: {friend['avatar']}")

        hours = int(friend['friends_online_duration']) // 3600
        minutes = (int(friend['friends_online_duration']) % 3600) // 60

        print(f"   ‚è±Ô∏è  –í—Ä–µ–º—è –æ–Ω–ª–∞–π–Ω: {hours}—á {minutes}–º ‚è≥")

        last_online = datetime.fromisoformat(friend['last_friends_online'].replace('Z', '+00:00'))
        formatted_date = last_online.strftime("%d.%m.%Y –≤ %H:%M")
        print(f"   üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–Ω–ª–∞–π–Ω: {formatted_date} üïí")

    if data['mutualFriends']:
        print(f"\nü§ù –û–±—â–∏—Ö –¥—Ä—É–∑–µ–π: {len(data['mutualFriends'])}")
    else:
        pass

    print("\n" + "üéÆ" + "=" * 50 + "üéÆ")


def sobitiya_usera(user_id):
    url = f'https://discord-sensor.com/api/users/get-latest-events/{user_id}?subTab=server_history&limit=20&page=2'

    try:
        response = requests.get(url)
        data = response.json()

        result_text = format_events(data)

        print(result_text)

        return result_text

    except Exception as e:
        error_message = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}"
        print(error_message)
        return error_message


def format_events(data):
    if not data or 'results' not in data:
        return "üì≠ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"

    events = data['results']

    if not events:
        return "üì≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç —Å–æ–±—ã—Ç–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö"

    output = f"üìä –ò–°–¢–û–†–ò–Ø DISCORD –°–ï–†–í–ï–†–û–í –¢–ê–†–ì–ï–¢–ê\n"
    output += f"–í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {data.get('total_count', 0)}\n"
    output += f"–ü–æ–∫–∞–∑–∞–Ω–æ: {data.get('item_count', 0)} –∏–∑ {len(events)}\n"
    output += "=" * 60 + "\n\n"

    for i, event in enumerate(events, 1):
        event_type = "‚úÖ –ü–†–ò–°–û–ï–î–ò–ù–ò–õ–°–Ø" if event.get('type') else "‚ùå –ü–û–ö–ò–ù–£–õ"

        timestamp = event.get('timestamp', '')
        try:
            dt = datetime.fromisoformat(timestamp.replace('Z', '+00:00'))
            formatted_date = dt.strftime("%d.%m.%Y –≤ %H:%M:%S")
        except:
            formatted_date = timestamp

        guild_name = event.get('guild_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä')
        guild_id = event.get('guild_id', 'N/A')

        output += f"{i}. {event_type}\n"
        output += f"   üè∞ –°–µ—Ä–≤–µ—Ä: {guild_name}\n"
        output += f"   üìç ID —Å–µ—Ä–≤–µ—Ä–∞: {guild_id}\n"
        output += f"   üïê –î–∞—Ç–∞: {formatted_date}\n"
        output += f"   üî¢ ID —Å–æ–±—ã—Ç–∏—è: {event.get('id', 'N/A')}\n"

        if i < len(events):
            output += "   " + "-" * 40 + "\n"
        else:
            output += "\n"

    output += "=" * 60
    return output


def voice_history(user_id):
    url = f'https://discord-sensor.com/api/users/get-latest-events/{user_id}?subTab=voice_history&limit=20&page=1'

    try:
        response = requests.get(url)
        data = response.json()
        result_text = format_voice_history(data)
        print(result_text)
        return result_text
    except Exception as e:
        error_message = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}"
        print(error_message)
        return error_message


def format_duration(seconds):
    if seconds < 60:
        return f"{seconds} —Å–µ–∫"
    elif seconds < 3600:
        minutes = seconds // 60
        secs = seconds % 60
        return f"{minutes} –º–∏–Ω {secs} —Å–µ–∫"
    else:
        hours = seconds // 3600
        minutes = (seconds % 3600) // 60
        secs = seconds % 60
        return f"{hours} —á {minutes} –º–∏–Ω {secs} —Å–µ–∫"


def format_voice_history(data):

    if not data or 'results' not in data:
        return "üì≠ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≥–æ–ª–æ—Å–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏ —Ç–∞—Ä–≥–µ—Ç–∞"

    events = data['results']

    if not events:
        return "üì≠ –¢–∞—Ä–≥–µ—Ç –Ω–µ –∏–º–µ–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤"

    output = f"üéß –ò–°–¢–û–†–ò–Ø –ê–ö–¢–ò–í–ù–û–°–¢–ò –í –ì–û–õ–û–°–û–í–´–• –ö–ê–ù–ê–õ–ê–• \n"
    output += f"–í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: {data.get('total_count', 0)}\n"
    output += f"–ü–æ–∫–∞–∑–∞–Ω–æ: {len(events)} –∏–∑ {data.get('total_count', 0)}\n"
    output += "=" * 70 + "\n\n"

    for i, event in enumerate(events, 1):

        join_time = event.get('join_timestamp', '')
        leave_time = event.get('leave_timestamp', '')

        try:
            join_dt = datetime.fromisoformat(join_time.replace('Z', '+00:00'))
            leave_dt = datetime.fromisoformat(leave_time.replace('Z', '+00:00'))
            formatted_join = join_dt.strftime("%d.%m.%Y –≤ %H:%M:%S")
            formatted_leave = leave_dt.strftime("%d.%m.%Y –≤ %H:%M:%S")
            date_only = join_dt.strftime("%d.%m.%Y")
        except:
            formatted_join = join_time
            formatted_leave = leave_time
            date_only = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

        guild_name = event.get('guild_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä')
        channel_name = event.get('channel_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª')
        voice_duration = event.get('voice_duration', 0)

        output += f"{i}. üé§ –ì–û–õ–û–°–û–í–ê–Ø –°–ï–°–°–ò–Ø ({date_only})\n"
        output += f"   üè∞ –°–µ—Ä–≤–µ—Ä: {guild_name}\n"
        output += f"   üìç –ö–∞–Ω–∞–ª: {channel_name}\n"
        output += f"   ‚è±Ô∏è  –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {format_duration(voice_duration)}\n"
        output += f"   üîΩ –í–æ—à–µ–ª: {formatted_join}\n"
        output += f"   üîº –í—ã—à–µ–ª: {formatted_leave}\n"
        output += f"   üî¢ ID —Å–µ—Å—Å–∏–∏: {event.get('id', 'N/A')}\n"
        output += f"   üÜî ID —Å–µ—Ä–≤–µ—Ä–∞: {event.get('guild_id', 'N/A')}\n"
        output += f"   üÜî ID –∫–∞–Ω–∞–ª–∞: {event.get('channel_id', 'N/A')}\n"

        if i < len(events):
            output += "   " + "-" * 50 + "\n"
        else:
            output += "\n"

    total_duration = sum(event.get('voice_duration', 0) for event in events)
    avg_duration = total_duration / len(events) if events else 0

    output += "=" * 70

    return output


